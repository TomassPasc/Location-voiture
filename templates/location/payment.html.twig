{% extends 'base.html.twig' %}

{% block title %}Payment
{% endblock %}
{% block stylesheets %}
<style>
	/**
         * The CSS shown here will not be introduced in the Quickstart guide, but shows
         * how you can use CSS to style your Element's container.
         */
	.StripeElement {
		box-sizing: border-box;
		height: 40px;
		width: 100%;
		padding: 10px 12px;
		border: 1px solid transparent;
		border-radius: 4px;
		background-color: white;
		box-shadow: 0 1px 3px 0 #e6ebf1;
		-webkit-transition: box-shadow 150ms ease;
		transition: box-shadow 150ms ease;
	}

	.StripeElement--focus {
		box-shadow: 0 1px 3px 0 #cfd7df;
	}

	.StripeElement--invalid {
		border-color: #0A9B01;
	}

	.StripeElement--webkit-autofill {
		background-color: #fefde5 !important;
	}
</style>

{% endblock %}


{% block monTitre %}
test
{% endblock %}

{% block body %}
	<!-- Icons Grid -->
	<section class="features-icons bg-light text-center">
		<div class="container">
			<div class="row">
				<div class="col">
					<div class="card-body">
						<form action="{{ path("subscriptions_paiement", {'id': voiture.id }) }}" method="post" id="payment-form">
							<div class="form-row">
								<div id="card-elements"></div>

								<script src="https://js.stripe.com/v3/"></script>

								<div id="card-errors" role="alert"></div>
							</div>
							<button class="btn btn-primary mt-4">
								Payé
								{{ prix }} €
							</button>
						</form>
					</div>
				</div>
				<div class="col">
					<div class="features-icons-item mx-auto mb-5 mb-lg-0 mb-lg-3">
						 <img src="{{asset('images/' ~ voiture.modele.image)}}" class="img-thumbnail">
						<h3>
							{{ voiture.modele.libelle }}
						</h3>
						<p>
							{{ voiture.immatriculation }}
						</p>
					</div>
				</div>
			</div>
		</div>
	</section>
{% endblock %}

{% block javascripts %}
<script>

	{% if app_environement == 'dev' %}
        var stripeToken = "{{ stripe_public_key_test }}";
    {% else %}
        var stripeToken = "{{ stripe_public_key_live }}";
    {% endif %}

    var stripe = Stripe(stripeToken);
    var elements = stripe.elements();
    var subscription = "{{ voiture.id }}";
    var clientSecret = "{{ intentSecret }}";
    var cardholderName = "{{ app.user.pseudo }}";
    var cardholderEmail = "{{ app.user.email }}";

    console.log('clientSecret', clientSecret);

    var styleCustom = {
    base: {
        fontSize: '16px',
        color: '#25332d'
    }
    }

    // Monter notre form a l'objet Stripe
    var card = elements.create('card', {style: styleCustom});
    card.mount("#card-elements");

    // Message Error
    card.addEventListener('change', function (event) {
        var displayError = document.getElementById('card-errors');
        if (event.error) {
            displayError.textContent = event.error.message;
        } else {
            displayError.textContent = '';
        }
    });

    var form = document.getElementById('payment-form');

    form.addEventListener('submit', function (event) {
        event.preventDefault();
        stripe.handleCardPayment(
            clientSecret, 
            card, {
                payment_method_data: {
                    billing_details: {
                        name: cardholderName,
                        email: cardholderEmail
                    }
                }
            }
        ).then((result) => {
            if (result.error) {
                 //TODO: Display error

            } else if ('paymentIntent' in result) {
             //   console.log('Result : ', result);
                stripeTokenHandler(result.paymentIntent);
               // console.log('Result paymentIntent : ', result.paymentIntent);
            }
        })
    });

    function stripeTokenHandler(intent) {
        var form = document.getElementById('payment-form');
        var InputIntentId = document.createElement('input');
        var InputIntentPaymentMethod = document.createElement('input');
        var InputIntentStatus = document.createElement('input');
        var InputSubscription = document.createElement('input');

        InputIntentId.setAttribute('type', 'hidden');
        InputIntentId.setAttribute('name', 'stripeIntentId');
        InputIntentId.setAttribute('value', intent.id);

        InputIntentPaymentMethod.setAttribute('type', 'hidden');
        InputIntentPaymentMethod.setAttribute('name', 'stripeIntentPaymentMethod');
        InputIntentPaymentMethod.setAttribute('value', intent.payment_method);

        InputIntentStatus.setAttribute('type', 'hidden');
        InputIntentStatus.setAttribute('name', 'stripeIntentStatus');
        InputIntentStatus.setAttribute('value', intent.status);

        InputSubscription.setAttribute('type', 'hidden');
        InputSubscription.setAttribute('name', 'subscription');
        InputSubscription.setAttribute('value', subscription);

        form.appendChild(InputIntentId);
        form.appendChild(InputIntentPaymentMethod);
        form.appendChild(InputIntentStatus);
        form.appendChild(InputSubscription);
        form.submit();
    }
</script>
{% endblock %}

